package org.lz1aq.dlinecontroller;


import java.awt.Event;
import java.awt.event.ItemEvent;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.SwingUtilities;
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

import org.lz1aq.dlinecontroller.DLineApplicationState.AntennaDirections;

/**
 *
 * @author Chavdar
 */
public class DLineApplication extends javax.swing.JFrame {   
    
	private static final long serialVersionUID = 1L;
	static final int MIN_SWITCHING_SPEED_IN_MS = 150;
    static final int DEFAULT_SWITCHING_SPEED_IN_MS = 2000;
    static final int MAX_SWITCHING_SPEED_IN_MS = 60000;

    private final DLineApplicationState     dLineApplicationState;
    private final DLineApplicationSettings  dLineSettings;
    private final DLineSerialComm           dLineSerialComm;
    
    private final DefaultComboBoxModel  comPortComboBoxModel;
    private final DefaultComboBoxModel  baudRateComboBoxModel;
    private final DefaultComboBoxModel  deviceIdComboBoxModel;
    
    private DirectionSwitchingThread directionSwitchingThread;
    
    /**
     * Thread responsible of automatic direction switching. The thread is started
     * when the user selects the menu item: File->Debug mode
     */
    private class DirectionSwitchingThread extends Thread
    {   
        private int switchingSpeed = DEFAULT_SWITCHING_SPEED_IN_MS; // Time interval between direction change
        private boolean running = false; // true - means the thread is running
        private long timer = 0;
        
        public synchronized int getSwitchingSpeed()
        {
            return switchingSpeed;
        }

        public synchronized void setSwitchingSpeed(int switchingSpeed)
        {
            this.switchingSpeed = switchingSpeed;
        }

        public synchronized boolean isRunning()
        {
            return running;
        }

        public synchronized void setRunning(boolean running)
        {
            this.running = running;
        }
        
        
        @Override
        public void run()
        {
            setRunning(true);
            
            while(isRunning())
            {
                SwingUtilities.invokeLater(new Runnable() {
                    @Override
                    public void run() 
                    {
                        toggleDirectionButtons();
                    }});
                
                timer = System.currentTimeMillis();
                
                while( System.currentTimeMillis() < (timer+switchingSpeed) )
                {
                    if(!isRunning())
                        return;
                }
//                synchronized(this)
//                {
//                    try{wait(switchingSpeed);}catch (InterruptedException ex){Logger.getLogger(DLineApplication.class.getName()).log(Level.SEVERE, null, ex);}
//                }             
            }
        }
        
        
    };
    
    
    /**
     * Creates new form DLineApplication
     */
    public DLineApplication() 
    {  
        // Data for the Combo boxes in the settings Dialog
        this.baudRateComboBoxModel = new DefaultComboBoxModel(new String[] { "1200", "2400", "4800", "9600", "19200", "38400", "57600", "115200" });
        this.comPortComboBoxModel  = new DefaultComboBoxModel(DLineSerialComm.getAvailableSerialPorts().toArray());
        this.deviceIdComboBoxModel = new DefaultComboBoxModel(new String[] { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9"});
                
        // Load user settings from the properties file
        dLineSettings = new DLineApplicationSettings();
        // Init the DLineState object
        dLineApplicationState = new DLineApplicationState();
        
        // Create the object which will take care of sending data through the UART
        dLineSerialComm = new DLineSerialComm();
        
        // Print the working path and the 
        System.out.println("Working Directory = " +
                System.getProperty("user.dir"));
        System.out.println("java.library.path = " + System.getProperty("java.library.path"));
        //System.setProperty("java.library.path", yourPath); // not used 
        
        // Init GUI
        initComponents();      
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        jDialogSettings = new javax.swing.JDialog();
        jPanel1 = new javax.swing.JPanel();
        jRadioButtonNorth = new javax.swing.JRadioButton();
        jRadioButtonNorthWest = new javax.swing.JRadioButton();
        jLabel1 = new javax.swing.JLabel();
        jComboBoxComPort = new javax.swing.JComboBox();
        jComboBoxBaudRate = new javax.swing.JComboBox();
        jButtonSave = new javax.swing.JButton();
        jButtonCancel = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jFormattedTextFieldPlusY = new javax.swing.JFormattedTextField();
        jFormattedTextFieldMinusY = new javax.swing.JFormattedTextField();
        jFormattedTextFieldPlusX = new javax.swing.JFormattedTextField();
        jFormattedTextFieldMinusX = new javax.swing.JFormattedTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jComboBoxDeviceId = new javax.swing.JComboBox();
        buttonGroupInSettings = new javax.swing.ButtonGroup();
        buttonGroupDirections = new javax.swing.ButtonGroup();
        jDialogRelaySwitching = new javax.swing.JDialog();
        jPanel2 = new javax.swing.JPanel();
        jLabelDebugMode = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jTextFieldDebugSwitchingSpeed = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jDialogAbout = new javax.swing.JDialog();
        jButton2 = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jPanel11 = new javax.swing.JPanel();
        jToggleButton7 = new javax.swing.JToggleButton();
        jToggleButton8 = new javax.swing.JToggleButton();
        jToggleButton9 = new javax.swing.JToggleButton();
        jToggleButton4 = new javax.swing.JToggleButton();
        jToggleButton5 = new javax.swing.JToggleButton();
        jToggleButton6 = new javax.swing.JToggleButton();
        jToggleButton1 = new javax.swing.JToggleButton();
        jToggleButton2 = new javax.swing.JToggleButton();
        jToggleButton3 = new javax.swing.JToggleButton();
        jPanel12 = new javax.swing.JPanel();
        jToggleButtonAntennaMode = new javax.swing.JToggleButton();
        jLabelSerialComm = new javax.swing.JLabel();
        menuBar = new javax.swing.JMenuBar();
        fileMenu = new javax.swing.JMenu();
        jMenuSettigns = new javax.swing.JMenuItem();
        jMenuDebugMode = new javax.swing.JMenuItem();
        exitMenuItem = new javax.swing.JMenuItem();
        helpMenu = new javax.swing.JMenu();
        aboutMenuItem = new javax.swing.JMenuItem();

        jDialogSettings.setTitle("Settings");
        jDialogSettings.setAlwaysOnTop(true);
        jDialogSettings.setModal(true);
        jDialogSettings.addComponentListener(new java.awt.event.ComponentAdapter()
        {
            public void componentShown(java.awt.event.ComponentEvent evt)
            {
                jDialogSettingsComponentShown(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Settings"));

        buttonGroupInSettings.add(jRadioButtonNorth);
        jRadioButtonNorth.setText("N-S orientation");
        jRadioButtonNorth.setToolTipText("North-South");

        buttonGroupInSettings.add(jRadioButtonNorthWest);
        jRadioButtonNorthWest.setText("NW-SE orientation");
        jRadioButtonNorthWest.setToolTipText("NorthWest-SouthEast");

        jLabel1.setText("COM port settings:");

        jComboBoxComPort.setModel(this.comPortComboBoxModel);

        jComboBoxBaudRate.setModel(this.getBaudRateComboBoxModel());

        jButtonSave.setText("Save");
        jButtonSave.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jButtonSaveActionPerformed(evt);
            }
        });

        jButtonCancel.setText("Cancel");
        jButtonCancel.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jButtonCancelActionPerformed(evt);
            }
        });

        jLabel2.setText("Button orientation:");

        jLabel3.setText("Direction buttons text:");

        jFormattedTextFieldPlusY.setText("jFormattedTextField1");

        jFormattedTextFieldMinusY.setText("jFormattedTextField2");

        jFormattedTextFieldPlusX.setText("jFormattedTextField3");

        jFormattedTextFieldMinusX.setText("jFormattedTextField5");

        jLabel4.setText("+Y:");

        jLabel5.setText("+X:");

        jLabel8.setText("-Y:");

        jLabel6.setText("-X:");

        jLabel7.setText("Device ID");

        jComboBoxDeviceId.setModel(deviceIdComboBoxModel);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jButtonSave, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(30, 30, 30)
                        .addComponent(jButtonCancel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jRadioButtonNorth, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jRadioButtonNorthWest, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jComboBoxBaudRate, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jComboBoxComPort, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(132, 132, 132)))
                        .addGap(6, 6, 6))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel5))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jFormattedTextFieldPlusY)
                                    .addComponent(jFormattedTextFieldPlusX))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel8)
                                    .addComponent(jLabel6))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jFormattedTextFieldMinusY)
                                    .addComponent(jFormattedTextFieldMinusX)))
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap())
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jComboBoxDeviceId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(4, 4, 4)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jComboBoxDeviceId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRadioButtonNorth, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jRadioButtonNorthWest, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(12, 12, 12)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jComboBoxComPort, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jComboBoxBaudRate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jFormattedTextFieldPlusY, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jFormattedTextFieldMinusY, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jFormattedTextFieldPlusX, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jFormattedTextFieldMinusX, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonSave, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButtonCancel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout jDialogSettingsLayout = new javax.swing.GroupLayout(jDialogSettings.getContentPane());
        jDialogSettings.getContentPane().setLayout(jDialogSettingsLayout);
        jDialogSettingsLayout.setHorizontalGroup(
            jDialogSettingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialogSettingsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jDialogSettingsLayout.setVerticalGroup(
            jDialogSettingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialogSettingsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jDialogRelaySwitching.setTitle("Debug mode");
        jDialogRelaySwitching.setAlwaysOnTop(true);
        jDialogRelaySwitching.setModalityType(java.awt.Dialog.ModalityType.APPLICATION_MODAL);
        jDialogRelaySwitching.setResizable(false);
        jDialogRelaySwitching.addComponentListener(new java.awt.event.ComponentAdapter()
        {
            public void componentHidden(java.awt.event.ComponentEvent evt)
            {
                jDialogRelaySwitchingComponentHidden(evt);
            }
            public void componentShown(java.awt.event.ComponentEvent evt)
            {
                jDialogRelaySwitchingComponentShown(evt);
            }
        });

        jLabelDebugMode.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabelDebugMode.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelDebugMode.setText("Direction is changed every:");
        jLabelDebugMode.setToolTipText("");

        jButton1.setText("Cancel");
        jButton1.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jButton1ActionPerformed(evt);
            }
        });

        jTextFieldDebugSwitchingSpeed.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextFieldDebugSwitchingSpeed.setText("2000");
        jTextFieldDebugSwitchingSpeed.setToolTipText("Type a value [150 to 60000] and press Enter.");
        jTextFieldDebugSwitchingSpeed.addKeyListener(new java.awt.event.KeyAdapter()
        {
            public void keyPressed(java.awt.event.KeyEvent evt)
            {
                jTextFieldDebugSwitchingSpeedKeyPressed(evt);
            }
        });

        jLabel9.setText("msecs");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabelDebugMode, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(50, 50, 50)
                                .addComponent(jTextFieldDebugSwitchingSpeed, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel9))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(42, 42, 42)
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jLabelDebugMode, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldDebugSwitchingSpeed, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout jDialogRelaySwitchingLayout = new javax.swing.GroupLayout(jDialogRelaySwitching.getContentPane());
        jDialogRelaySwitching.getContentPane().setLayout(jDialogRelaySwitchingLayout);
        jDialogRelaySwitchingLayout.setHorizontalGroup(
            jDialogRelaySwitchingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jDialogRelaySwitchingLayout.setVerticalGroup(
            jDialogRelaySwitchingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jDialogAbout.setTitle("About");
        jDialogAbout.setAlwaysOnTop(true);
        jDialogAbout.setModal(true);
        jDialogAbout.setResizable(false);

        jButton2.setText("OK");
        jButton2.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Tahoma", 2, 11)); // NOI18N
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel11.setText("by LZ1AQ");

        jTextField1.setEditable(false);
        jTextField1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jTextField1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField1.setText("www.active-antenna.eu");

        javax.swing.GroupLayout jDialogAboutLayout = new javax.swing.GroupLayout(jDialogAbout.getContentPane());
        jDialogAbout.getContentPane().setLayout(jDialogAboutLayout);
        jDialogAboutLayout.setHorizontalGroup(
            jDialogAboutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jDialogAboutLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jDialogAboutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jTextField1)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 249, Short.MAX_VALUE))
                .addContainerGap())
        );
        jDialogAboutLayout.setVerticalGroup(
            jDialogAboutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialogAboutLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel11)
                .addGap(18, 18, 18)
                .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Serial Interface to LZ1AQ's DLine Controller");
        setMinimumSize(new java.awt.Dimension(233, 234));
        addWindowListener(new java.awt.event.WindowAdapter()
        {
            public void windowClosing(java.awt.event.WindowEvent evt)
            {
                formWindowClosing(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt)
            {
                formWindowOpened(evt);
            }
        });

        jPanel11.setLayout(new java.awt.GridLayout(3, 3));

        buttonGroupDirections.add(jToggleButton7);
        jToggleButton7.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jToggleButton7.setText("+Y");
        jToggleButton7.setMinimumSize(new java.awt.Dimension(0, 0));
        jToggleButton7.setPreferredSize(new java.awt.Dimension(40, 40));
        jToggleButton7.addItemListener(new java.awt.event.ItemListener()
        {
            public void itemStateChanged(java.awt.event.ItemEvent evt)
            {
                jToggleButton7ItemStateChanged(evt);
            }
        });
        jPanel11.add(jToggleButton7);

        buttonGroupDirections.add(jToggleButton8);
        jToggleButton8.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jToggleButton8.setText("+Y");
        jToggleButton8.setMinimumSize(new java.awt.Dimension(0, 0));
        jToggleButton8.setPreferredSize(new java.awt.Dimension(40, 40));
        jToggleButton8.addItemListener(new java.awt.event.ItemListener()
        {
            public void itemStateChanged(java.awt.event.ItemEvent evt)
            {
                jToggleButton8ItemStateChanged(evt);
            }
        });
        jPanel11.add(jToggleButton8);

        buttonGroupDirections.add(jToggleButton9);
        jToggleButton9.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jToggleButton9.setText("-X");
        jToggleButton9.setMinimumSize(new java.awt.Dimension(0, 0));
        jToggleButton9.setPreferredSize(new java.awt.Dimension(40, 40));
        jToggleButton9.addItemListener(new java.awt.event.ItemListener()
        {
            public void itemStateChanged(java.awt.event.ItemEvent evt)
            {
                jToggleButton9ItemStateChanged(evt);
            }
        });
        jPanel11.add(jToggleButton9);

        buttonGroupDirections.add(jToggleButton4);
        jToggleButton4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jToggleButton4.setText("+X");
        jToggleButton4.setMinimumSize(new java.awt.Dimension(0, 0));
        jToggleButton4.setPreferredSize(new java.awt.Dimension(40, 40));
        jToggleButton4.addItemListener(new java.awt.event.ItemListener()
        {
            public void itemStateChanged(java.awt.event.ItemEvent evt)
            {
                jToggleButton4ItemStateChanged(evt);
            }
        });
        jPanel11.add(jToggleButton4);

        buttonGroupDirections.add(jToggleButton5);
        jToggleButton5.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jToggleButton5.setText("Add");
        jToggleButton5.setMinimumSize(new java.awt.Dimension(0, 0));
        jToggleButton5.setPreferredSize(new java.awt.Dimension(40, 40));
        jToggleButton5.addItemListener(new java.awt.event.ItemListener()
        {
            public void itemStateChanged(java.awt.event.ItemEvent evt)
            {
                jToggleButton5ItemStateChanged(evt);
            }
        });
        jPanel11.add(jToggleButton5);

        buttonGroupDirections.add(jToggleButton6);
        jToggleButton6.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jToggleButton6.setText("-X");
        jToggleButton6.setMinimumSize(new java.awt.Dimension(0, 0));
        jToggleButton6.setPreferredSize(new java.awt.Dimension(40, 40));
        jToggleButton6.addItemListener(new java.awt.event.ItemListener()
        {
            public void itemStateChanged(java.awt.event.ItemEvent evt)
            {
                jToggleButton6ItemStateChanged(evt);
            }
        });
        jPanel11.add(jToggleButton6);

        buttonGroupDirections.add(jToggleButton1);
        jToggleButton1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jToggleButton1.setText("+X");
        jToggleButton1.setMinimumSize(new java.awt.Dimension(0, 0));
        jToggleButton1.setPreferredSize(new java.awt.Dimension(40, 40));
        jToggleButton1.addItemListener(new java.awt.event.ItemListener()
        {
            public void itemStateChanged(java.awt.event.ItemEvent evt)
            {
                jToggleButton1ItemStateChanged(evt);
            }
        });
        jPanel11.add(jToggleButton1);

        buttonGroupDirections.add(jToggleButton2);
        jToggleButton2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jToggleButton2.setText("-Y");
        jToggleButton2.setMinimumSize(new java.awt.Dimension(0, 0));
        jToggleButton2.setPreferredSize(new java.awt.Dimension(40, 40));
        jToggleButton2.addItemListener(new java.awt.event.ItemListener()
        {
            public void itemStateChanged(java.awt.event.ItemEvent evt)
            {
                jToggleButton2ItemStateChanged(evt);
            }
        });
        jPanel11.add(jToggleButton2);

        buttonGroupDirections.add(jToggleButton3);
        jToggleButton3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jToggleButton3.setText("-Y");
        jToggleButton3.setMinimumSize(new java.awt.Dimension(0, 0));
        jToggleButton3.setPreferredSize(new java.awt.Dimension(40, 40));
        jToggleButton3.addItemListener(new java.awt.event.ItemListener()
        {
            public void itemStateChanged(java.awt.event.ItemEvent evt)
            {
                jToggleButton3ItemStateChanged(evt);
            }
        });
        jPanel11.add(jToggleButton3);

        jToggleButtonAntennaMode.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jToggleButtonAntennaMode.setText("Dipole");
        jToggleButtonAntennaMode.setMinimumSize(null);
        jToggleButtonAntennaMode.setPreferredSize(new java.awt.Dimension(40, 40));
        jToggleButtonAntennaMode.addItemListener(new java.awt.event.ItemListener()
        {
            public void itemStateChanged(java.awt.event.ItemEvent evt)
            {
                jToggleButtonAntennaModeItemStateChanged(evt);
            }
        });

        jLabelSerialComm.setText("Serial Comm:");

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jToggleButtonAntennaMode, javax.swing.GroupLayout.DEFAULT_SIZE, 233, Short.MAX_VALUE)
            .addComponent(jLabelSerialComm, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addComponent(jToggleButtonAntennaMode, javax.swing.GroupLayout.DEFAULT_SIZE, 36, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelSerialComm)
                .addContainerGap())
        );

        jLabelSerialComm.getAccessibleContext().setAccessibleName("jLabelSerialComm");
        jLabelSerialComm.getAccessibleContext().setAccessibleDescription("");

        fileMenu.setMnemonic('f');
        fileMenu.setText("File");
        fileMenu.addKeyListener(new java.awt.event.KeyAdapter()
        {
            public void keyPressed(java.awt.event.KeyEvent evt)
            {
                fileMenuKeyPressed(evt);
            }
        });

        jMenuSettigns.setText("Settings");
        jMenuSettigns.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jMenuSettignsActionPerformed(evt);
            }
        });
        fileMenu.add(jMenuSettigns);

        jMenuDebugMode.setText("Debug mode");
        jMenuDebugMode.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jMenuDebugModeActionPerformed(evt);
            }
        });
        fileMenu.add(jMenuDebugMode);

        exitMenuItem.setMnemonic('x');
        exitMenuItem.setText("Exit");
        exitMenuItem.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                exitMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(exitMenuItem);

        menuBar.add(fileMenu);

        helpMenu.setMnemonic('h');
        helpMenu.setText("Help");

        aboutMenuItem.setMnemonic('a');
        aboutMenuItem.setText("About");
        aboutMenuItem.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                aboutMenuItemActionPerformed(evt);
            }
        });
        helpMenu.add(aboutMenuItem);

        menuBar.add(helpMenu);

        setJMenuBar(menuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, 233, Short.MAX_VALUE)
            .addComponent(jPanel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, 127, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void fileMenuKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_fileMenuKeyPressed
        
    }//GEN-LAST:event_fileMenuKeyPressed

    private void jDialogSettingsComponentShown(java.awt.event.ComponentEvent evt)//GEN-FIRST:event_jDialogSettingsComponentShown
    {//GEN-HEADEREND:event_jDialogSettingsComponentShown
        // Settings dialog is shown and we need to set the states of the controls
        loadUserSettings();
    }//GEN-LAST:event_jDialogSettingsComponentShown

    private void formWindowOpened(java.awt.event.WindowEvent evt)//GEN-FIRST:event_formWindowOpened
    {//GEN-HEADEREND:event_formWindowOpened
        // Read last used button orientation
        updateDirectionButtons();
        // Read last used JFrame dimensions and restore it
        this.setBounds(dLineSettings.getJFrameDimensions());
        
    }//GEN-LAST:event_formWindowOpened

    private void jToggleButton7ItemStateChanged(java.awt.event.ItemEvent evt)//GEN-FIRST:event_jToggleButton7ItemStateChanged
    {//GEN-HEADEREND:event_jToggleButton7ItemStateChanged
        if(evt.getStateChange()==ItemEvent.SELECTED)
        {
           dLineApplicationState.setAntennaDirection(AntennaDirections.plusY);
           setJFrameTitleToShowCurrentState();
           sendSerialCommand();
        } 
    }//GEN-LAST:event_jToggleButton7ItemStateChanged

    private void jToggleButton8ItemStateChanged(java.awt.event.ItemEvent evt)//GEN-FIRST:event_jToggleButton8ItemStateChanged
    {//GEN-HEADEREND:event_jToggleButton8ItemStateChanged
        if(evt.getStateChange()==ItemEvent.SELECTED)
        {
           dLineApplicationState.setAntennaDirection(AntennaDirections.plusY);
           setJFrameTitleToShowCurrentState();
           sendSerialCommand();
        } 
    }//GEN-LAST:event_jToggleButton8ItemStateChanged

    private void jToggleButton9ItemStateChanged(java.awt.event.ItemEvent evt)//GEN-FIRST:event_jToggleButton9ItemStateChanged
    {//GEN-HEADEREND:event_jToggleButton9ItemStateChanged
        if(evt.getStateChange()==ItemEvent.SELECTED)
        {
           dLineApplicationState.setAntennaDirection(AntennaDirections.minusX);
           setJFrameTitleToShowCurrentState();
           sendSerialCommand();
        } 
    }//GEN-LAST:event_jToggleButton9ItemStateChanged

    private void jToggleButton6ItemStateChanged(java.awt.event.ItemEvent evt)//GEN-FIRST:event_jToggleButton6ItemStateChanged
    {//GEN-HEADEREND:event_jToggleButton6ItemStateChanged
        if(evt.getStateChange()==ItemEvent.SELECTED)
        {
           dLineApplicationState.setAntennaDirection(AntennaDirections.minusX);
           setJFrameTitleToShowCurrentState();
           sendSerialCommand();
        } 
    }//GEN-LAST:event_jToggleButton6ItemStateChanged

    private void jToggleButton3ItemStateChanged(java.awt.event.ItemEvent evt)//GEN-FIRST:event_jToggleButton3ItemStateChanged
    {//GEN-HEADEREND:event_jToggleButton3ItemStateChanged
        if(evt.getStateChange()==ItemEvent.SELECTED)
        {
           dLineApplicationState.setAntennaDirection(AntennaDirections.minusY);
           setJFrameTitleToShowCurrentState();
           sendSerialCommand();
        } 
    }//GEN-LAST:event_jToggleButton3ItemStateChanged

    private void jToggleButton2ItemStateChanged(java.awt.event.ItemEvent evt)//GEN-FIRST:event_jToggleButton2ItemStateChanged
    {//GEN-HEADEREND:event_jToggleButton2ItemStateChanged
        if(evt.getStateChange()==ItemEvent.SELECTED)
        {
           dLineApplicationState.setAntennaDirection(AntennaDirections.minusY);
           setJFrameTitleToShowCurrentState();
           sendSerialCommand();
        } 
    }//GEN-LAST:event_jToggleButton2ItemStateChanged

    private void jToggleButton1ItemStateChanged(java.awt.event.ItemEvent evt)//GEN-FIRST:event_jToggleButton1ItemStateChanged
    {//GEN-HEADEREND:event_jToggleButton1ItemStateChanged
        if(evt.getStateChange()==ItemEvent.SELECTED)
        {
           dLineApplicationState.setAntennaDirection(AntennaDirections.plusX);
           setJFrameTitleToShowCurrentState();
           sendSerialCommand();
        } 
    }//GEN-LAST:event_jToggleButton1ItemStateChanged

    private void jToggleButton5ItemStateChanged(java.awt.event.ItemEvent evt)//GEN-FIRST:event_jToggleButton5ItemStateChanged
    {//GEN-HEADEREND:event_jToggleButton5ItemStateChanged
        if(evt.getStateChange()==ItemEvent.SELECTED)
        {
           dLineApplicationState.setAntennaDirection(AntennaDirections.add);
           setJFrameTitleToShowCurrentState();
           sendSerialCommand();
        } 
    }//GEN-LAST:event_jToggleButton5ItemStateChanged

    private void jToggleButtonAntennaModeItemStateChanged(java.awt.event.ItemEvent evt)//GEN-FIRST:event_jToggleButtonAntennaModeItemStateChanged
    {//GEN-HEADEREND:event_jToggleButtonAntennaModeItemStateChanged
        if(evt.getStateChange()==ItemEvent.SELECTED)
        {
           dLineApplicationState.setAntennaMode(DLineApplicationState.AntennaModes.loop);
           jToggleButtonAntennaMode.setText("Loop");
           setJFrameTitleToShowCurrentState();
           
           // Make sure that "Add" direction is selected if this is the first
           // press after the application has been started.
           if(dLineApplicationState.getAntennaDirection() == AntennaDirections.add &&
              jToggleButton5.isSelected() == false)
           {
               jToggleButton5.setSelected(true);
           }
        } 
        else if(evt.getStateChange()==ItemEvent.DESELECTED)
        {
           dLineApplicationState.setAntennaMode(DLineApplicationState.AntennaModes.dipole);
           jToggleButtonAntennaMode.setText("Dipole");
           setJFrameTitleToShowCurrentState();
        }
        
        sendSerialCommand();
    }//GEN-LAST:event_jToggleButtonAntennaModeItemStateChanged

    private void jToggleButton4ItemStateChanged(java.awt.event.ItemEvent evt)//GEN-FIRST:event_jToggleButton4ItemStateChanged
    {//GEN-HEADEREND:event_jToggleButton4ItemStateChanged
        if(evt.getStateChange()==ItemEvent.SELECTED)
        {
           dLineApplicationState.setAntennaDirection(AntennaDirections.plusX);
           setJFrameTitleToShowCurrentState();
           sendSerialCommand();
        } 
    }//GEN-LAST:event_jToggleButton4ItemStateChanged

    private void formWindowClosing(java.awt.event.WindowEvent evt)//GEN-FIRST:event_formWindowClosing
    {//GEN-HEADEREND:event_formWindowClosing
        // Before closing we need to save the dimensions of the JFrame
        if(this.getExtendedState()==MAXIMIZED_BOTH)
            return; // do not save if maximized
        dLineSettings.setJFrameDimensions(this.getBounds());
        dLineSettings.SaveSettingsToDisk();
    }//GEN-LAST:event_formWindowClosing

    private void jDialogRelaySwitchingComponentShown(java.awt.event.ComponentEvent evt)//GEN-FIRST:event_jDialogRelaySwitchingComponentShown
    {//GEN-HEADEREND:event_jDialogRelaySwitchingComponentShown
        // Start the direction switching thread
        directionSwitchingThread = new DirectionSwitchingThread();
           //Read the initial switching speed
        int speed = Integer.parseInt(jTextFieldDebugSwitchingSpeed.getText());
        directionSwitchingThread.setSwitchingSpeed(speed);
        directionSwitchingThread.start();
    }//GEN-LAST:event_jDialogRelaySwitchingComponentShown

    private void jDialogRelaySwitchingComponentHidden(java.awt.event.ComponentEvent evt)//GEN-FIRST:event_jDialogRelaySwitchingComponentHidden
    {//GEN-HEADEREND:event_jDialogRelaySwitchingComponentHidden
        // Tell the thread to stop running if it is running
        directionSwitchingThread.setRunning(false);
    }//GEN-LAST:event_jDialogRelaySwitchingComponentHidden

    private void jTextFieldDebugSwitchingSpeedKeyPressed(java.awt.event.KeyEvent evt)//GEN-FIRST:event_jTextFieldDebugSwitchingSpeedKeyPressed
    {//GEN-HEADEREND:event_jTextFieldDebugSwitchingSpeedKeyPressed
        if(evt.getKeyCode() != Event.ENTER)
            return;
        
        int speed = DEFAULT_SWITCHING_SPEED_IN_MS;
        try
        {
            speed = Integer.parseInt(jTextFieldDebugSwitchingSpeed.getText());
        }
        catch (Exception exc)
        {
            jTextFieldDebugSwitchingSpeed.setText(Integer.toString(DEFAULT_SWITCHING_SPEED_IN_MS));
        }
        
        if (speed > MAX_SWITCHING_SPEED_IN_MS)
        {
            speed = MAX_SWITCHING_SPEED_IN_MS;
            jTextFieldDebugSwitchingSpeed.setText(Integer.toString(speed));
        }
        else if(speed<MIN_SWITCHING_SPEED_IN_MS)
        {
            speed = MIN_SWITCHING_SPEED_IN_MS;  
            jTextFieldDebugSwitchingSpeed.setText(Integer.toString(speed));
        }

        directionSwitchingThread.setSwitchingSpeed(speed);        
    }//GEN-LAST:event_jTextFieldDebugSwitchingSpeedKeyPressed

    private void exitMenuItemActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_exitMenuItemActionPerformed
    {//GEN-HEADEREND:event_exitMenuItemActionPerformed
        System.exit(0);
    }//GEN-LAST:event_exitMenuItemActionPerformed

    private void jMenuSettignsActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jMenuSettignsActionPerformed
    {//GEN-HEADEREND:event_jMenuSettignsActionPerformed
        jDialogSettings.pack();
        jDialogSettings.setVisible(true);
    }//GEN-LAST:event_jMenuSettignsActionPerformed

    private void jMenuDebugModeActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jMenuDebugModeActionPerformed
    {//GEN-HEADEREND:event_jMenuDebugModeActionPerformed
        jDialogRelaySwitching.pack();
        jDialogRelaySwitching.setVisible(true);
    }//GEN-LAST:event_jMenuDebugModeActionPerformed

    private void aboutMenuItemActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_aboutMenuItemActionPerformed
    {//GEN-HEADEREND:event_aboutMenuItemActionPerformed
        jDialogAbout.pack();
        jDialogAbout.setVisible(true);
    }//GEN-LAST:event_aboutMenuItemActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButton1ActionPerformed
    {//GEN-HEADEREND:event_jButton1ActionPerformed
        jDialogRelaySwitching.setVisible(false);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButton2ActionPerformed
    {//GEN-HEADEREND:event_jButton2ActionPerformed
        jDialogAbout.setVisible(false);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButtonCancelActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButtonCancelActionPerformed
    {//GEN-HEADEREND:event_jButtonCancelActionPerformed
        jDialogSettings.setVisible(false);
    }//GEN-LAST:event_jButtonCancelActionPerformed

    private void jButtonSaveActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButtonSaveActionPerformed
    {//GEN-HEADEREND:event_jButtonSaveActionPerformed
        // Hide the SettingsDialog
        jDialogSettings.setVisible(false);
        // Read the state of the controls and save them
        saveUserSettings();
        // Update the button orientation
        updateDirectionButtons();
    }//GEN-LAST:event_jButtonSaveActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DLineApplication.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DLineApplication.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DLineApplication.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DLineApplication.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new DLineApplication().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem aboutMenuItem;
    private javax.swing.ButtonGroup buttonGroupDirections;
    private javax.swing.ButtonGroup buttonGroupInSettings;
    private javax.swing.JMenuItem exitMenuItem;
    private javax.swing.JMenu fileMenu;
    private javax.swing.JMenu helpMenu;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButtonCancel;
    private javax.swing.JButton jButtonSave;
    private javax.swing.JComboBox jComboBoxBaudRate;
    private javax.swing.JComboBox jComboBoxComPort;
    private javax.swing.JComboBox jComboBoxDeviceId;
    private javax.swing.JDialog jDialogAbout;
    private javax.swing.JDialog jDialogRelaySwitching;
    private javax.swing.JDialog jDialogSettings;
    private javax.swing.JFormattedTextField jFormattedTextFieldMinusX;
    private javax.swing.JFormattedTextField jFormattedTextFieldMinusY;
    private javax.swing.JFormattedTextField jFormattedTextFieldPlusX;
    private javax.swing.JFormattedTextField jFormattedTextFieldPlusY;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabelDebugMode;
    private javax.swing.JLabel jLabelSerialComm;
    private javax.swing.JMenuItem jMenuDebugMode;
    private javax.swing.JMenuItem jMenuSettigns;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JRadioButton jRadioButtonNorth;
    private javax.swing.JRadioButton jRadioButtonNorthWest;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextFieldDebugSwitchingSpeed;
    private javax.swing.JToggleButton jToggleButton1;
    private javax.swing.JToggleButton jToggleButton2;
    private javax.swing.JToggleButton jToggleButton3;
    private javax.swing.JToggleButton jToggleButton4;
    private javax.swing.JToggleButton jToggleButton5;
    private javax.swing.JToggleButton jToggleButton6;
    private javax.swing.JToggleButton jToggleButton7;
    private javax.swing.JToggleButton jToggleButton8;
    private javax.swing.JToggleButton jToggleButton9;
    private javax.swing.JToggleButton jToggleButtonAntennaMode;
    private javax.swing.JMenuBar menuBar;
    // End of variables declaration//GEN-END:variables


    public DefaultComboBoxModel getBaudRateComboBoxModel()
    {
        return baudRateComboBoxModel;
    }
    
    
    /**
     * Enables and disables the desired direction button set depending on the 
     * orientation stored in dLineSettings. <br>
     * Also sets the labels of the direction buttons.
     */
    private void updateDirectionButtons()
    {
        if(dLineSettings.getButtonOrientation() == DLineApplicationSettings.ButtonOrientation.North)
        {
            jToggleButton7.setVisible(false);
            jToggleButton9.setVisible(false);
            jToggleButton3.setVisible(false);
            jToggleButton1.setVisible(false);
            jToggleButton8.setVisible(true);
            jToggleButton6.setVisible(true);
            jToggleButton4.setVisible(true);
            jToggleButton2.setVisible(true);
        }
        else
        {
            jToggleButton7.setVisible(true);
            jToggleButton9.setVisible(true);
            jToggleButton3.setVisible(true);
            jToggleButton1.setVisible(true);
            jToggleButton8.setVisible(false);
            jToggleButton6.setVisible(false);
            jToggleButton4.setVisible(false);
            jToggleButton2.setVisible(false);
        }
        
        jToggleButton7.setText(dLineSettings.getLabelPlusY());
        jToggleButton9.setText(dLineSettings.getLabelPlusX());
        jToggleButton3.setText(dLineSettings.getLabelMinusY());
        jToggleButton1.setText(dLineSettings.getLabelMinusX());
        jToggleButton8.setText(dLineSettings.getLabelPlusY());
        jToggleButton6.setText(dLineSettings.getLabelMinusX());
        jToggleButton4.setText(dLineSettings.getLabelPlusX());
        jToggleButton2.setText(dLineSettings.getLabelMinusY());
    }
    
    /**
     * Sends a command to the DLine Controller device. The command represents
     * the current state of the Java application.
     */
    private void sendSerialCommand()
    {
        try 
        {
            // Send the command to the DLine Controller device
            dLineSerialComm.sendCommand(dLineSettings.getComPort(),
                                              Integer.parseInt(dLineSettings.getBaudRate()),
                                              Byte.parseByte(dLineSettings.getDeviceId()),
                                              dLineApplicationState.getState());
             // Draw the command being send at the bottom of the jFrame
             jLabelSerialComm.setText("Serial "+dLineSettings.getComPort()+": " +String.format("%8s", Integer.toBinaryString(dLineApplicationState.getState())).replace(" ", "0")); 
        } catch (Exception ex) 
        {
            // Draw debug info at the bottom of the jFrame
            jLabelSerialComm.setText("Serial "+dLineSettings.getComPort()+": " +ex.toString()); 
            Logger.getLogger(DLineApplication.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    
    /**
     * Sets the title of the JFrame to show the currently selected antenna and
     * direction. <br>
     * For example: "Loop: +Y"
     */
    private void setJFrameTitleToShowCurrentState()
    {
        String title;
        
        // Read antenna Mode
        switch(dLineApplicationState.getAntennaMode())
        {
            case dipole:
                title = "Dip: ";
                break;
            case loop:
                title = "Loop: ";
                break;
            case undefined:
            default:
                title = "Err: ";
                break;                
        }
        
        // Read the antenna Direction
        switch(dLineApplicationState.getAntennaDirection())
        {
            case plusY:
                title = title.concat(dLineSettings.getLabelPlusY());
                break;
            case minusY:
                title = title.concat(dLineSettings.getLabelMinusY());
                break;
            case plusX:
                title = title.concat(dLineSettings.getLabelPlusX());
                break;
            case minusX:
                title = title.concat(dLineSettings.getLabelMinusX());
                break;
            case add:
                title = title.concat("Add");
                // we have to add the last directive mode
                if(dLineApplicationState.getLastDirectiveMode() == AntennaDirections.plusY)
                {
                    title = title.concat("(Y)");
                }
                else
                {
                    title = title.concat("(X)");
                } 
                break;
            case undefined:
            default:
                title = title.concat("error");
                break;    
        }
        
       
        this.setTitle(title);
    }
    
    
    /**
     *  When called this function will change the current direction (clockwise)
     */
    private void toggleDirectionButtons()
    {
        if(dLineSettings.getButtonOrientation() == DLineApplicationSettings.ButtonOrientation.North)
        {
            if(jToggleButton8.isSelected())
                jToggleButton6.setSelected(true);
            else if(jToggleButton6.isSelected())
                jToggleButton2.setSelected(true);
            else if(jToggleButton2.isSelected())
                jToggleButton4.setSelected(true);
            else
                jToggleButton8.setSelected(true);      
        }
        else
        {
            if(jToggleButton1.isSelected())
                jToggleButton7.setSelected(true);
            else if(jToggleButton7.isSelected())
                jToggleButton9.setSelected(true);
            else if(jToggleButton9.isSelected())
                jToggleButton3.setSelected(true);
            else
                jToggleButton1.setSelected(true);      
        }
    }
    
    /**
     *  User has closed the setting dialog and we need to save the state of the controls
     */
    private void saveUserSettings()
    {
        dLineSettings.setDeviceId(jComboBoxDeviceId.getSelectedItem().toString());
        
        if(jRadioButtonNorth.isSelected())
            dLineSettings.setButtonOrientation(DLineApplicationSettings.ButtonOrientation.North);
        else
            dLineSettings.setButtonOrientation(DLineApplicationSettings.ButtonOrientation.NorthWest);
        
        dLineSettings.setBaudRate(jComboBoxBaudRate.getSelectedItem().toString());
        dLineSettings.setComPort(jComboBoxComPort.getSelectedItem().toString());
        
        // Store direction button texts
        dLineSettings.setLabelPlusY(jFormattedTextFieldPlusY.getText());
        dLineSettings.setLabelMinusY(jFormattedTextFieldMinusY.getText());
        dLineSettings.setLabelPlusX(jFormattedTextFieldPlusX.getText());
        dLineSettings.setLabelMinusX(jFormattedTextFieldMinusX.getText());
        
        dLineSettings.SaveSettingsToDisk();
    }
    
    private void loadUserSettings()
    {
        jComboBoxDeviceId.setSelectedItem(dLineSettings.getDeviceId());

        if(dLineSettings.getButtonOrientation() == DLineApplicationSettings.ButtonOrientation.North)
        {
            jRadioButtonNorth.setSelected(true);
            jRadioButtonNorthWest.setSelected(false);
        }
        else
        {
            jRadioButtonNorth.setSelected(false);
            jRadioButtonNorthWest.setSelected(true);
        }               
                
        // Comm port settings
        jComboBoxComPort.setSelectedItem(dLineSettings.getComPort());
        jComboBoxBaudRate.setSelectedItem(dLineSettings.getBaudRate());
        
        // Direction buttons text       
        jFormattedTextFieldPlusY.setText(dLineSettings.getLabelPlusY());
        jFormattedTextFieldMinusY.setText(dLineSettings.getLabelMinusY());
        jFormattedTextFieldPlusX.setText(dLineSettings.getLabelPlusX());
        jFormattedTextFieldMinusX.setText(dLineSettings.getLabelMinusX());
    }
}
